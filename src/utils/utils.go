package utils

import (
	"encoding/base64"
	"encoding/json"

	gin "github.com/gin-gonic/gin"
	models "server.com/src/models"
)

const MAX_PORT int = 65535
const SESSION_KEY string = "user-id"
const IP_ADDRESS string = "127.0.0.1"
const DEFAULT_PORT int = 7070
const CONNECTION_KEY_HEADER string = "x-connection-key"
const KEY_SIZE int = 128

var LockedAccountResponse gin.H = gin.H{
	"error":  "account has been locked",
	"reason": "an invalid connection key was provided",
}

var INVALID_CONNECTION_KEY_MESSAGE string = "invalid connection key provided"
var LOGIN_FIRST string = "please login before accessing this endpoint"
var LOGIN_SUCCESS string = "successfully logged in"
var LOGOUT_SUCCESS string = "successfully logged out"

func DecodeConnectionKey(key string) (models.ConnectionKey, []byte, error) {

	var JsonConnectionKey models.ConnectionKey

	decodedKey, err := base64.RawStdEncoding.DecodeString(key)
	if err != nil {
		return models.ConnectionKey{}, decodedKey, err
	}

	if err := json.Unmarshal(decodedKey, &JsonConnectionKey); err != nil {
		return models.ConnectionKey{}, decodedKey, err
	}

	return JsonConnectionKey, decodedKey, nil
}
